--CREATE USER BAITHI
CREATE USER BAITHI IDENTIFIED BY 26082002;
GRANT CONNECT, RESOURCE, DBA TO BAITHI;
GRANT UNLIMITED TABLESPACE TO BAITHI;
CREATE TABLE BAITHI.XE
(
    MAXE VARCHAR(3) CONSTRAINT PK_XE PRIMARY KEY,
    BIENKS VARCHAR(9),
    MATUYEN VARCHAR(4),
    SOGHET1 NUMBER,
    SOGHET2 NUMBER
);

CREATE TABLE BAITHI.TUYEN 
(
    MATUYEN VARCHAR(4) CONSTRAINT PK_TUYENALTER PRIMARY KEY,
    BENDAU VARCHAR(3) NOT NULL,
    BENCUOI VARCHAR(3) NOT NULL,
    GIATUYEN DECIMAL,
    NGXB DATE,
    TGDK NUMBER
);

CREATE TABLE BAITHI.KHACH
(
    MAKH VARCHAR(4) CONSTRAINT PK_KHACH PRIMARY KEY,
    HOTEN VARCHAR(20),
    GIOITINH VARCHAR(3),
    CMND NUMBER(11)
);

CREATE TABLE BAITHI.VEXE 
(
    MATUYEN VARCHAR(4),
    MAKH VARCHAR(4),
    NGMUA DATE,
    GIAVE DECIMAL,
    CONSTRAINT PK_VEXE PRIMARY KEY(MATUYEN, MAKH, NGMUA)
);


ALTER SESSION SET NLS_DATE_FORMAT =' DD/MM/YYYY HH24:MI:SS ';

ALTER TABLE BAITHI.XE ADD CONSTRAINT FK_XE_MATUYEN FOREIGN KEY(MATUYEN) REFERENCES BAITHI.TUYEN(MATUYEN);
ALTER TABLE BAITHI.VEXE ADD CONSTRAINT FK_VEXE_MATUYEN FOREIGN KEY(MATUYEN) REFERENCES BAITHI.TUYEN(MATUYEN);
ALTER TABLE BAITHI.VEXE ADD CONSTRAINT FK_VEXE_MAKH FOREIGN KEY(MAKH) REFERENCES BAITHI.KHACH(MAKH);

-- INSERT TABLE TUYEN ---
INSERT INTO BAITHI.TUYEN VALUES('T11A', 'SG','DL', 210.000,'26/12/2016',6);
INSERT INTO BAITHI.TUYEN VALUES('T32D', 'PT','SG', 120.000,'30/12/2016',4);
INSERT INTO BAITHI.TUYEN VALUES('T06F', 'NT','DNG', 225.000,'02/01/2017',7);
-- INSERT TABLE KHACH ---
INSERT INTO BAITHI.KHACH VALUES('KH01', 'Lam Van Ben','Nam', 655615896);
INSERT INTO BAITHI.KHACH VALUES('KH02', 'Duong Thi Luc','Nu', 275648642);
INSERT INTO BAITHI.KHACH VALUES('KH03', 'Hoang Thanh Tung','Nam', 456889143);
-- INSERT TABLE XE ---
INSERT INTO BAITHI.XE VALUES('X01', '52LD-4393','T11A',20,20);
INSERT INTO BAITHI.XE VALUES('X02', '59LD-7247','T32D',36,36);
INSERT INTO BAITHI.XE VALUES('X03','55LD-6850','T06F',15,15);
-- INSERT TABLE VEXE ---
INSERT INTO BAITHI.VEXE VALUES('T11A', 'KH01','20/12/2016', 210.000);
INSERT INTO BAITHI.VEXE VALUES('T32D', 'KH02','25/12/2016', 144.000);
INSERT INTO BAITHI.VEXE VALUES('T06F', 'KH03','30/12/2016', 270.000);
-- Câu 3: Hiện thực ràng buộc toàn vẹn sau: Các tuyến xe có Thời gian dự kiến lớn hơn 5 tiếng luôn có giá tuyến lớn hơn 200.000.
ALTER TABLE BAITHI.TUYEN
ADD CONSTRAINT CHECK_GIA 
CHECK ((TGDK > 5 and GIATUYEN > 200.000)or(TGDK <= 5));

-- Câu 4: Hiện thực ràng buộc toàn vẹn sau: Tuyến xe có ngày xuất bến từ ngày 29/12/2016 đến ngày 05/01/2017 sẽ có giá vé tăng 20%.
CREATE TRIGGER BAITHI.TANGGIA
BEFORE INSERT ON BAITHI.VEXE
REFERENCING NEW AS NEW
FOR EACH ROW
DECLARE 
    GIAVE_VEXE FLOAT;
BEGIN
    SELECT GIATUYEN INTO GIAVE_VEXE FROM BAITHI.TUYEN WHERE TUYEN.MATUYEN = :NEW.MATUYEN;
    
    IF :NEW.NGMUA >= '29/12/2016' AND :NEW.NGMUA <= '05/01/2017' THEN
        :NEW.GIAVE := GIAVE_VEXE + GIAVE_VEXE*0.2;
    ELSE
        :NEW.GIAVE := giave_vexe;
    END IF;
END;
/
-- Câu 5: Tìm tất cả các vé xe mua trong tháng 12, sắp xếp kết quả giảm dần theo giá vé.
SELECT * FROM BAITHI.VEXE WHERE EXTRACT(MONTH FROM NGMUA) = 12 ORDER BY GIAVE DESC;
-- Câu 6: Tìm tuyến xe có số vé xe ít nhất trong năm 2016.
SELECT MATUYEN FROM BAITHI.VEXE WHERE EXTRACT(YEAR FROM NGMUA) = 2016 
    GROUP BY MATUYEN HAVING COUNT (MATUYEN) <= ALL
                                                    ( SELECT COUNT (MATUYEN) FROM BAITHI.VEXE 
                                                      WHERE EXTRACT(YEAR FROM NGMUA) = 2016
                                                      GROUP BY MATUYEN);
-- Câu 7: Tìm tuyến xe có cả hành khách nam và hành khách nữ mua vé.
SELECT MATUYEN FROM BAITHI.KHACH JOIN BAITHI.VEXE
ON BAITHI.KHACH.MAKH = BAITHI.VEXE.MAKH
WHERE BAITHI.KHACH.GIOITINH = 'Nam'
INTERSECT
SELECT MATUYEN FROM BAITHI.KHACH JOIN BAITHI.VEXE
ON BAITHI.KHACH.MAKH = BAITHI.VEXE.MAKH
WHERE BAITHI.KHACH.GIOITINH = 'Nu';
-- Câu 8: Tìm hành khách nữ đã từng mua vé tất cả các tuyến xe.
SELECT * FROM BAITHI.KHACH KH
WHERE GIOITINH = 'NU' and NOT EXISTS (
SELECT * FROM BAITHI.TUYEN TU
WHERE NOT EXISTS (
SELECT * FROM BAITHI.VEXE VX
WHERE TU.MATUYEN = VX.MATUYEN AND KH.MAKH = VX.MAKH)
);
